## bathroom lightstrip automation
# rules for turning off and on the bathroom nightlight based on motion detection
- alias: Turn on bathroom nightlight when motion is detected
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.ecolink_pir_motion_sensor_sensor_3_0
    from: 'off'
    to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: light.bathroom_lightstrip
- alias: Turn off bathroom nightlight when motion is not detected
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.ecolink_pir_motion_sensor_sensor_3_0
    from: 'on'
    to: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: light.bathroom_lightstrip

## desk_lightstrip on/off with power on outlet
# rules for turning on the lightstrip when computer is running
- alias: Turn on the desk lightstrip when outlet draws 25W or more
  initial_state: true
  hide_entity: true
  trigger:
    platform: template
    value_template: '{% if states.switch.computer_outlet.state %}{{ states.switch.computer_outlet.attributes.current_power_w > 25 }}{% endif %}'
  action:
    service: homeassistant.turn_on
    entity_id: light.desk_lightstrip
  # suppress if in Media mode
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.light_mode
        state: 'Normal'
      - condition: state
        entity_id: input_select.light_mode
        state: 'Circadian'
- alias: Turn off the desk lightstrip when outlet draws 25W or less
  initial_state: true
  hide_entity: true
  trigger:
    platform: template
    value_template: '{% if states.switch.computer_outlet.state %}{{ states.switch.computer_outlet.attributes.current_power_w < 25 }}{% endif %}'
  action:
    service: homeassistant.turn_off
    entity_id: light.desk_lightstrip

## coming home and leaving home
# rule for coming home
- alias: Lights and A/C on when home
  initial_state: true
  hide_entity: true
  trigger:
    platform: zone
    entity_id: device_tracker.iansmcf_myphone
    zone: zone.home
    event: enter
  action:
    - service: homeassistant.turn_on
      entity_id: group.white_lights
    - service: climate.set_hold_mode
      entity_id: climate.my_ecobee
      data:
        hold_mode: home
# rule for leaving home
- alias: Lights and A/C off when not home
  initial_state: true
  hide_entity: true
  trigger:
    platform: zone
    entity_id: device_tracker.iansmcf_myphone
    zone: zone.home
    event: leave
  action:
    - service: homeassistant.turn_off
      entity_id: group.white_lights
    - service: homeassistant.turn_off
      entity_id: switch.wemo_bedroom_switch
    - service: climate.set_hold_mode
      entity_id: climate.my_ecobee
      data:
        hold_mode: away

## rules for light_mode
# automation rule for entering normal light mode
- alias: Enter 'Normal' light mode
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_select.light_mode
    state: 'Normal'
  action:
    - service: script.normal_light
# automation rule for entering circadian light mode
- alias: Enter 'Circadian' light mode
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_select.light_mode
    state: 'Circadian'
  action:
    - service: script.circadian_light
# automation rule for entering media light mode
- alias: Enter 'Media' light mode
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_select.light_mode
    state: 'Media'
  action:
    - service: script.media_light

## rules for media_control input_select
# automation rule


## rules for tv_power input_select
# automation rule for TV power on
- alias: Turn on the TV
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_select.tv_power
    state: 'On'
  action:
    - service: script.tv_on
# automation rule for TV power off
- alias: Turn off the TV
  initial_state: true
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_select.tv_power
    state: 'Off'
  action:
    - service: script.tv_off
