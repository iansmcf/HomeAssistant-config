homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret home_latitude
  longitude: !secret home_longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret home_elevation
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Chicago

  customize: !include customize.yaml

# Enables the frontend
frontend:

# add config panel to frontend
config:

http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret http_password
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123

# Checks for available updates
updater:

# Discover some devices automatically
#discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:


# Ecobee
ecobee:
  api_key: _REDACTED_

# Weather Prediction
sensor:
  - platform: yr
  - platform: darksky
    name: weather
    api_key: !secret darksky_api
    monitored_conditions:
      - temperature
      - humidity
      - precip_probability
      - precip_intensity
      - wind_speed
      - pressure
      - wind_bearing
      - apparent_temperature
      - icon
  - platform: fedex
    username: !secret fedex_username
    password: !secret fedex_password
    name: fedex_packages
  - platform: ups
    username: !secret ups_username
    password: !secret ups_password
    name: ups_packages

emulated_hue:
  type: google_home
  listen_port: 80
  expose_by_default: true
  exposed_domains:
    - switch
    - light

# Text to speech
tts:
  platform: google


# Lights
light:
  platform: hue
  host: 192.168.88.32
  allow_hue_groups: true

# enable wemo component
wemo:
  static:
    - 192.168.88.20
    - 192.168.88.21


media_player:
    # enable roku component
  - platform: roku
    host: 192.168.88.30
    # enable plex component
  - platform: plex
    # enable bedroom google cast
  - platform: cast
    host: 192.168.88.33
    # enable google home cast
  - platform: cast
    host: 192.168.88.31

# connect to mqtt broker
mqtt:
  broker: !secret mqtt_ip
  port: !secret mqtt_port
  client_id: homeassistant
  keepalive: 60
  username: !secret mqtt_username
  password: !secret mqtt_password
  birth_message:
    topic: 'hass/status'
    payload: 'online'
    qos: 1
    retain: true
  will_message:
    topic: 'hass/status'
    payload: 'offline'
    qos: 1
    retain: true

# add flux for changing lighting colors based on time
#switch:
#  platform: flux
#  lights:
#    - light.warehouse_lights
#    - light.living_room_lamp
#    - light.bedroom_lamp
#  name: flux
#  start_time: '6:30'
#  stop_time: '1:00'
#  start_colortemp: 4000
#  sunset_colortemp: 3000
#  stop_colortemp: 2100
  #brightness: 255

switch 2:
  platform: broadlink
  host: 192.168.88.34
  mac: !secret broadlink_MAC

# my computer
#device_tracker:
#  - platform: ping
#    hosts:
#      router: 192.168.88.250

# Add owntracks for presence detection
device_tracker:
  - platform: owntracks
    max_gps_accuracy: 200
    track_new_devices: no
#  - platform: nmap_tracker
#    hosts: 192.168.88.150

# enable zwave
zwave:
  usb_path: /dev/ttyACM0
  config_path: /home/homeassistant/python-openzwave/openzwave/config

# Add an input select which controls the white balance of lights in one of three modes
input_select:
  light_mode:
    name: Light mode
    options:
      - Normal
      - Circadian
      - Media
    #initial: Normal
    icon: mdi:white-balance-sunny
  media_center:
    name: Media center
    options:
      - Power off
      - Roku
      - Computer
      - Switch
    icon: mdi:remote


zone:
  name: Home
  # Set geographical location of the zone, along with raidus.
  # Conveniently re-uses the home location from the configuration of homeassistant
  latitude: !secret home_latitude
  longitude: !secret home_longitude
  radius: !secret home_zone_radius
  # Set icon to material design icon, home
  icon: mdi:home

zone 2:
  name: Work
  latitude: !secret work_latitude
  longitude: !secret work_longitude
  radius: !secret work_zone_radius
  # Set icon to material design icon, briefcase
  icon: mdi:briefcase

group: !include group.yaml

# control "white" lights
script:
  # media_lights - when watching TV
  media_light:
    sequence:
      - service: light.turn_on
        entity_id: group.white_lights
        data:
          color_temp: 500
          brightness: 100
      # turn off desk lightstrip
      - service: light.turn_off
        entity_id: light.desk_lightstrip
  # normal light - a warm, white light suitable for most times of day
  normal_light:
    sequence:
      - service: light.turn_on
        entity_id: group.white_lights
        data:
          color_temp: 335
          brightness: 450
  # circadian light - attempt to match light temperature to time of day
  # TODO: Make this functional somehow.
  circadian_light:
    sequence:
      - service: light.turn_on
        entity_id: group.white_lights
        data:
          color_temp: 400
          brightness: 150
  # script to use with HAdashboard to enable media mode
  enable_media_mode:
    sequence:
      - service: input_select.select_option
        entity_id: input_select.light_mode
        data:
          option: Media
  # script to use with HAdashboard to enable normal mode
  enable_normal_mode:
    sequence:
      - service: input_select.select_option
        entity_id: input_select.light_mode
        data:
          option: Normal

# Test configuration: add an empty webpage to the sidebar
#panel_custom:
#  - name: testpanel
#    sidebar_title: testpanel
#    sidebar_icon: mdi:work
#    url_path: testpanel
#    webcomponent_path: /home/hass/.homeassistant/www/hello.html

# Add some local webpages to the home assistant front end
panel_iframe:
# Add the router webpage to the frontend
  router:
    title: 'Router'
    url: !secret router_webpage
    icon: mdi:access-point-network
# Add the pihole webpage to the frontend
  pihole:
    title: 'DNS'
    url: !secret pihole_webpage
    icon: mdi:close-network

automation: !include automation.yaml
